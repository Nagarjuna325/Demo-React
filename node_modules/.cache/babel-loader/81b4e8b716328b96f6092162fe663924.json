{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bonagarjuna\\\\Downloads\\\\Mail\\\\01-starting-project\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './store/auth-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // to check user is logged in retrve the information passed on it so we use this 3 lines\n  //const storedUserLoggedInInformation =localStorage.getItem('isLoggedIn');\n  //if(storedUserLoggedInInformation === '1'){\n  //setIsLoggedIn(true);\n  //}//infinite loop problem so using Effect down\n\n  useEffect(() => {\n    const storedUserLoggedInInformation = localStorage.getItem('isLoggedIn');\n\n    if (storedUserLoggedInInformation === '1') {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        isLoggedIn: false\n      },\n      children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n        isAuthenticated: isLoggedIn,\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: loginHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n          onLogout: logoutHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/bonagarjuna/Downloads/Mail/01-starting-project/src/App.js"],"names":["React","useEffect","useState","Login","Home","MainHeader","AuthContext","App","isLoggedIn","setIsLoggedIn","storedUserLoggedInInformation","localStorage","getItem","loginHandler","email","password","setItem","logoutHandler","removeItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C,CADa,CAEb;AAEA;AAEA;AACE;AACF;;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMS,6BAA6B,GAAEC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAArC;;AAEF,QAAGF,6BAA6B,KAAK,GAArC,EAAyC;AACvCD,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACA,GANQ,EAMP,EANO,CAAT;;AASA,QAAMI,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxC;AACA;AACDJ,IAAAA,YAAY,CAACK,OAAb,CAAqB,YAArB,EAAkC,GAAlC;AACCP,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GALD;;AAOA,QAAMQ,aAAa,GAAG,MAAM;AAC1BN,IAAAA,YAAY,CAACO,UAAb,CAAwB,YAAxB;AACAT,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAHD;;AAKA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAC3BD,QAAAA,UAAU,EAAE;AADe,OAA7B;AAAA,8BAKA,QAAC,UAAD;AAAY,QAAA,eAAe,EAAEA,UAA7B;AAAyC,QAAA,QAAQ,EAAES;AAAnD;AAAA;AAAA;AAAA;AAAA,cALA,eAMA;AAAA,mBACG,CAACT,UAAD,iBAAe,QAAC,KAAD;AAAO,UAAA,OAAO,EAAEK;AAAhB;AAAA;AAAA;AAAA;AAAA,gBADlB,EAEGL,UAAU,iBAAI,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAES;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,cANA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA9CQV,G;;KAAAA,G;AAgDT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './store/auth-context';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  // to check user is logged in retrve the information passed on it so we use this 3 lines\n  \n  //const storedUserLoggedInInformation =localStorage.getItem('isLoggedIn');\n\n  //if(storedUserLoggedInInformation === '1'){\n    //setIsLoggedIn(true);\n  //}//infinite loop problem so using Effect down\n\n  useEffect(()=>{\n    const storedUserLoggedInInformation =localStorage.getItem('isLoggedIn');\n\n  if(storedUserLoggedInInformation === '1'){\n    setIsLoggedIn(true);\n  }\n  },[]);\n\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n   localStorage.setItem('isLoggedIn','1');\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <React.Fragment>\n      <AuthContext.Provider value={{\n        isLoggedIn: false,\n      }\n\n      }>\n      <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n      </AuthContext.Provider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}